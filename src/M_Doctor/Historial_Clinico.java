/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package M_Doctor;

import Comportamientos.Historial_clinicoPaciente;
import clases.Paciente;
import clases.historial_clinico;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlo
 */
public class Historial_Clinico extends javax.swing.JFrame {

    /**
     * Creates new form Historial_Clinico
     */
    Historial_clinicoPaciente histo = new Historial_clinicoPaciente();

    public Historial_Clinico() {
        initComponents();
        cargarTabla();
        cargarTablaHC();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField5 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaPacienteHC = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        TxtCedulaPac = new javax.swing.JTextField();
        BtnBuscarPac = new javax.swing.JButton();
        BtnBuscarPac1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        TxtCedulaP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TxtCeduladoc = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        PanelSintomas = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        PanelDiagnositico = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaHistorialC = new javax.swing.JTable();
        Dateconsulta = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TxtBusHCpac = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        BtnBuscarHC = new javax.swing.JButton();
        BtnGuardarHC = new javax.swing.JButton();
        BtnRegistros = new javax.swing.JButton();
        BtnLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Bell MT", 3, 36)); // NOI18N
        jLabel1.setText("Historial Clinico");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(437, 437, 437))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Pacientes"));

        TablaPacienteHC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cedula", "Apellido", "Nombre", "Fecha de nacimiento", "Genero", "Tipo de sangre", "telefono", "direccion", "Id_paciente", "Alergias", "Discapacidad"
            }
        ));
        TablaPacienteHC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaPacienteHCMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaPacienteHC);

        jLabel3.setFont(new java.awt.Font("Bell MT", 3, 18)); // NOI18N
        jLabel3.setText("Buscar:");

        TxtCedulaPac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtCedulaPacKeyTyped(evt);
            }
        });

        BtnBuscarPac.setText("Buscar");
        BtnBuscarPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscarPacActionPerformed(evt);
            }
        });

        BtnBuscarPac1.setText("Ver registros");
        BtnBuscarPac1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscarPac1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(340, 340, 340)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtCedulaPac, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnBuscarPac)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnBuscarPac1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(TxtCedulaPac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnBuscarPac)
                    .addComponent(BtnBuscarPac1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Historial Clinico"));

        TxtCedulaP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtCedulaPKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Bell MT", 3, 18)); // NOI18N
        jLabel4.setText("Cedula Paciente: ");

        jLabel5.setFont(new java.awt.Font("Bell MT", 3, 18)); // NOI18N
        jLabel5.setText("Cedula Doctor: ");

        TxtCeduladoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtCeduladocKeyTyped(evt);
            }
        });

        PanelSintomas.setColumns(20);
        PanelSintomas.setRows(5);
        jScrollPane4.setViewportView(PanelSintomas);

        PanelDiagnositico.setColumns(20);
        PanelDiagnositico.setRows(5);
        jScrollPane6.setViewportView(PanelDiagnositico);

        TablaHistorialC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Cedula Paciente", "Cedula Doctor", "Sintomas", "Diagnostico", "Fecha Consulta"
            }
        ));
        TablaHistorialC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaHistorialCMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TablaHistorialC);

        jLabel6.setFont(new java.awt.Font("Bell MT", 3, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Bell MT", 3, 18)); // NOI18N
        jLabel7.setText("Buscar:");

        TxtBusHCpac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtBusHCpacActionPerformed(evt);
            }
        });
        TxtBusHCpac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtBusHCpacKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Bell MT", 3, 18)); // NOI18N
        jLabel8.setText("Sintomas: ");

        jLabel9.setFont(new java.awt.Font("Bell MT", 3, 18)); // NOI18N
        jLabel9.setText("Fecha Consulta:");

        jLabel10.setFont(new java.awt.Font("Bell MT", 3, 18)); // NOI18N
        jLabel10.setText("Diagnostico:");

        jSeparator1.setForeground(new java.awt.Color(51, 51, 51));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        BtnBuscarHC.setText("Buscar");
        BtnBuscarHC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscarHCActionPerformed(evt);
            }
        });

        BtnGuardarHC.setText("Guardar");
        BtnGuardarHC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGuardarHCActionPerformed(evt);
            }
        });

        BtnRegistros.setText("Ver Registros");
        BtnRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegistrosActionPerformed(evt);
            }
        });

        BtnLimpiar.setText("Limpiar");
        BtnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TxtCeduladoc, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TxtCedulaP, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Dateconsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane6)
                            .addComponent(jScrollPane4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(BtnGuardarHC)
                        .addGap(61, 61, 61)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TxtBusHCpac, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtnBuscarHC)
                        .addGap(18, 18, 18)
                        .addComponent(BtnRegistros)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnLimpiar))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(TxtCedulaP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(TxtCeduladoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(Dateconsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel6))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(65, 65, 65)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(84, 84, 84))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BtnGuardarHC)
                                    .addComponent(jLabel7)
                                    .addComponent(TxtBusHCpac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BtnBuscarHC)
                                    .addComponent(BtnRegistros)
                                    .addComponent(BtnLimpiar))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TablaPacienteHCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaPacienteHCMouseClicked

//         int i = TablaPacienteHC.getSelectedRow();
//
//        if (i >= 0) {}
    }//GEN-LAST:event_TablaPacienteHCMouseClicked

    private void BtnBuscarPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscarPacActionPerformed

        if (!(TxtBusHCpac.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "Error el campo esta vacio.");

        } else {
            if (TxtBusHCpac.getText().matches("^\\d{10}$")) {
                JOptionPane.showMessageDialog(null, "Error la cedula no esta ingresada bien.");
                TxtBusHCpac.setText("");
            } else {
                Busqueda_paciente1();
                TxtCedulaPac.setText("");
            }
        }
    }//GEN-LAST:event_BtnBuscarPacActionPerformed

    private void BtnBuscarPac1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscarPac1ActionPerformed
        // TODO add your handling code here:
        cargarTabla();
    }//GEN-LAST:event_BtnBuscarPac1ActionPerformed

    public void ResgitrarHistorialPaciente() {
        Historial_clinicoPaciente medic = new Historial_clinicoPaciente();
        medic.setCedula_pa(TxtCedulaP.getText());
        medic.setCedula_doc(TxtCeduladoc.getText());
        medic.setSintomas(PanelSintomas.getText());
        medic.setDiacnostico(PanelDiagnositico.getText());
        medic.setFecha(((JTextField) Dateconsulta.getDateEditor().getUiComponent()).getText());
        if (medic.IngreserHistorialPac()) {
            System.out.println("Si se ingreso a tu corazon");
        } else {
            System.out.println("esta roto tu corazon");
        }
    }
    private void BtnGuardarHCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGuardarHCActionPerformed
        // TODO add your handling code here
        Date fc = Dateconsulta.getDate();
        if (!(TxtCedulaP.getText().matches("^\\d{10}$"))) {
            JOptionPane.showMessageDialog(null, "Verifique la cedula del paciente.");
        } else {
            if (!(TxtCeduladoc.getText().matches("^\\d{10}$"))) {
                JOptionPane.showMessageDialog(null, "Verifique la cedula del doctor.");
            } else {
                if (fc == null) {
                    JOptionPane.showMessageDialog(null, "Verifique el ingreso de la fecha de consulta de diacnostico.");
                } else {
                    if (PanelSintomas.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Verifique el campo de sintomas.");
                    } else {
                        if (PanelDiagnositico.getText().isEmpty()) {
                            JOptionPane.showMessageDialog(null, "Verifique el campo de diagnostico.");
                        } else {
                            if (histo.valida_cedula_paciente(TxtCedulaP.getText()) == true) {
                                JOptionPane.showMessageDialog(null, "Error la cedula de paciente no esta en los registros del sistema.");

                            } else {
                                if (histo.valida_cedula_DOC(TxtCeduladoc.getText()) == true) {
                                    JOptionPane.showMessageDialog(null, "Error la cedula de doctor no esta en los registros del sistema.");

                                } else {
                                    ResgitrarHistorialPaciente();
                                    cargarTablaHC();
                                    lipiar_datosHC();
                                    JOptionPane.showMessageDialog(null, "Historial clinico guardado.");
                                }
                            }
                        }
                    }
                }
            }
        }

    }//GEN-LAST:event_BtnGuardarHCActionPerformed

    private void cargarTablaHC() {
        DefaultTableModel tblModelo = (DefaultTableModel) TablaHistorialC.getModel();

        tblModelo.setNumRows(0);
        List<historial_clinico> listapacientes = histo.historialclinicoPac();

        listapacientes.stream().forEach(p -> {
            String[] historial = {p.getCodigo_historial(), p.getCedula_pa(), p.getCedula_doc(), p.getSintomas(), p.getDiacnostico(), p.getFecha()};
            tblModelo.addRow(historial);
        });
        // limpiarCampos();
    }
    private void TxtBusHCpacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtBusHCpacActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtBusHCpacActionPerformed

    private void BtnBuscarHCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscarHCActionPerformed
        // TODO add your handling code here
        if (TxtBusHCpac.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Error el campo esta vacio.");

        } else {
            if (!(TxtBusHCpac.getText().matches("^\\d{10}$"))) {
                JOptionPane.showMessageDialog(null, "Error la cedula no esta ingresada bien.");
                TxtBusHCpac.setText("");
            } else {
                Busqueda_HClinicoPac();
                TxtBusHCpac.setText("");
            }
        }
    }//GEN-LAST:event_BtnBuscarHCActionPerformed

    private void BtnRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegistrosActionPerformed
        // TODO add your handling code here:
        cargarTablaHC();
        lipiar_datosHC();
        BtnGuardarHC.setEnabled(true);

    }//GEN-LAST:event_BtnRegistrosActionPerformed

    private void TablaHistorialCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaHistorialCMouseClicked
        // TODO add your handling code here:
        int i = TablaHistorialC.getSelectedRow();

        BtnGuardarHC.setEnabled(false);
        if (i >= 0) {
            String cod = TablaHistorialC.getValueAt(i, 0).toString();
            String cedulap = TablaHistorialC.getValueAt(i, 1).toString();
            String cedulad = TablaHistorialC.getValueAt(i, 2).toString();
            String sintoma = TablaHistorialC.getValueAt(i, 3).toString();
            String diagnostico = TablaHistorialC.getValueAt(i, 4).toString();

            TxtCedulaP.setText(cedulap);
            TxtCeduladoc.setText(cedulad);
            PanelSintomas.setText(sintoma);
            PanelDiagnositico.setText(diagnostico);
            String fecha = (String) TablaHistorialC.getValueAt(i, 5);
            Date fechas;
            try {
                fechas = new SimpleDateFormat("dd/MM/yyyy").parse(fecha);
                Dateconsulta.setDate(fechas);
            } catch (ParseException ex) {
                Logger.getLogger(Historial_Clinico.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {

        }

    }//GEN-LAST:event_TablaHistorialCMouseClicked

    private void BtnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLimpiarActionPerformed
        // TODO add your handling code here:
        lipiar_datosHC();
        BtnGuardarHC.setEnabled(true);
    }//GEN-LAST:event_BtnLimpiarActionPerformed

    private void TxtBusHCpacKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtBusHCpacKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo numeros por favor.");
        }
    }//GEN-LAST:event_TxtBusHCpacKeyTyped

    private void TxtCedulaPacKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtCedulaPacKeyTyped
        // TODO add your handling code here
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo numeros por favor.");
        }
    }//GEN-LAST:event_TxtCedulaPacKeyTyped

    private void TxtCedulaPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtCedulaPKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo numeros por favor.");
        }
    }//GEN-LAST:event_TxtCedulaPKeyTyped

    private void TxtCeduladocKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtCeduladocKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo numeros por favor.");
        }
    }//GEN-LAST:event_TxtCeduladocKeyTyped

    public void Busqueda_HClinicoPac() {
        DefaultTableModel tblModelo = (DefaultTableModel) TablaHistorialC.getModel();

        tblModelo.setNumRows(0);
        List<historial_clinico> listapacientes = histo.consultaHC(TxtBusHCpac.getText());

        listapacientes.stream().forEach(p -> {
            String[] hcli = {p.getCodigo_historial(), p.getCedula_pa(), p.getCedula_doc(), p.getSintomas(), p.getDiacnostico(), p.getFecha()};
            tblModelo.addRow(hcli);
        });
    }

    public void lipiar_datosHC() {
        TxtCedulaP.setText("");
        TxtCeduladoc.setText("");
        ((JTextField) Dateconsulta.getDateEditor().getUiComponent()).setText(null);
        PanelSintomas.setText("");
        PanelDiagnositico.setText("");
    }

    private void cargarTabla() {
        DefaultTableModel tblModelo = (DefaultTableModel) TablaPacienteHC.getModel();

        tblModelo.setNumRows(0);
        List<Paciente> listapacientes = histo.pacientes();

        listapacientes.stream().forEach(p -> {
            String[] persona = {p.getCedula(), p.getApellido(), p.getNombre(), p.getFecha_nacimiento(), p.getGenero(), p.getTipo_sangre(), p.getTelefono(), p.getDireccion(), p.getId_paciente(), p.getAlergias(), p.getDiscapacidad()};
            tblModelo.addRow(persona);
        });

    }

    private void Busqueda_paciente1() {
        DefaultTableModel tblModelo = (DefaultTableModel) TablaPacienteHC.getModel();

        tblModelo.setNumRows(0);
        List<Paciente> listapacientes = histo.consulta_paciente1(TxtCedulaPac.getText());

        listapacientes.stream().forEach(p -> {
            String[] persona = {p.getCedula(), p.getApellido(), p.getNombre(), p.getFecha_nacimiento(), p.getGenero(), p.getTipo_sangre(), p.getTelefono(), p.getDireccion(), p.getId_paciente(), p.getAlergias(), p.getDiscapacidad()};
            tblModelo.addRow(persona);
        });
        // limpiarCampos();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Historial_Clinico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Historial_Clinico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Historial_Clinico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Historial_Clinico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Historial_Clinico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBuscarHC;
    private javax.swing.JButton BtnBuscarPac;
    private javax.swing.JButton BtnBuscarPac1;
    private javax.swing.JButton BtnGuardarHC;
    private javax.swing.JButton BtnLimpiar;
    private javax.swing.JButton BtnRegistros;
    private com.toedter.calendar.JDateChooser Dateconsulta;
    private javax.swing.JTextArea PanelDiagnositico;
    private javax.swing.JTextArea PanelSintomas;
    private javax.swing.JTable TablaHistorialC;
    private javax.swing.JTable TablaPacienteHC;
    private javax.swing.JTextField TxtBusHCpac;
    private javax.swing.JTextField TxtCedulaP;
    private javax.swing.JTextField TxtCedulaPac;
    private javax.swing.JTextField TxtCeduladoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
