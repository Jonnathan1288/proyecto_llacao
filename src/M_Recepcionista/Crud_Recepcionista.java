/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package M_Recepcionista;

import Comportamientos.IngresoRecepcionistas;
import M_Recepcionista.Menu_Recepcionista;
import clases.Recepcionista;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class Crud_Recepcionista extends javax.swing.JFrame {

    /**
     * Creates new form Crud_Recepcionista
     */
    String edadrecep = "", titulorecep = "", generorecep = "";

    Recepcionista recep = new Recepcionista();
    IngresoRecepcionistas acrecep = new IngresoRecepcionistas();

    public Crud_Recepcionista() {
        initComponents();
        vertablaRecepcionistas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoGeneroRecep = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        TxtNombreRep = new javax.swing.JTextField();
        TxtTelefonoRep = new javax.swing.JTextField();
        TxtDireccionRep = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TxtApellidoRep = new javax.swing.JTextField();
        TxtCedulaRep = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        ComboTipoSangreRep = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        SpinerEdadRep = new javax.swing.JSpinner();
        RadioBtnMasculino = new javax.swing.JRadioButton();
        RadioBtnFemenino = new javax.swing.JRadioButton();
        RadioBtnNoDefinido = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        TxtIdRecepcionista = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        ComboTituloRep = new javax.swing.JComboBox<>();
        DateRecepcionista = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaRecepcionistas = new javax.swing.JTable();
        TxtBuscarRep = new javax.swing.JTextField();
        BtnBuscarRep = new javax.swing.JButton();
        BtnGuardarRep = new javax.swing.JButton();
        BtnVRegistrosRecep = new javax.swing.JButton();
        BtnModificarRep = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        BtnEliminarPac = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        BtnSalirCrudDoc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de Recepcionista"));

        jLabel1.setText("Cedula: ");

        jLabel2.setText("Apellido: ");

        jLabel4.setText("Nombre: ");

        jLabel5.setText("Fecha de nacimiento: ");

        jLabel6.setText("Telefono: ");

        jLabel7.setText("Direccion: ");

        jLabel8.setText("Tipo de sangre: ");

        ComboTipoSangreRep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "A+", "O+", "B+", "AB+", "A-", "O-", "B-", "AB-" }));
        ComboTipoSangreRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboTipoSangreRepActionPerformed(evt);
            }
        });

        jLabel9.setText("Edad: ");

        SpinerEdadRep.setModel(new javax.swing.SpinnerNumberModel(30, 30, 70, 1));

        GrupoGeneroRecep.add(RadioBtnMasculino);
        RadioBtnMasculino.setText("Masculino");

        GrupoGeneroRecep.add(RadioBtnFemenino);
        RadioBtnFemenino.setText("Femenino");

        GrupoGeneroRecep.add(RadioBtnNoDefinido);
        RadioBtnNoDefinido.setText("No definido");

        jLabel10.setText("Genero: ");

        jLabel12.setText("Id Recepcionista: ");

        jLabel14.setText("Titulo");

        ComboTituloRep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Alergología", "Anestesiología", "Angiología", "Cardiología", "Endocrinología", "Estomatología", "Gastroenterología", "Genética", "Geriatría", "Hematología", "Hepatología", "Infectología", "Medicina aeroespacial", "Medicina del deporte", "Medicina familiar y comunitaria", "Medicina física y rehabilitación", "Medicina forense", "Medicina intensiva", "Medicina interna", "Medicina preventiva y salud pública", "Medicina del trabajo", "Nefrología", "Neumología", "Neurología", "Nutriología", "Oncología médica", "Oncología radioterápica", "Pediatría", "Psiquiatría", "Reumatología", "Toxicología", " " }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TxtIdRecepcionista)
                            .addComponent(TxtDireccionRep)
                            .addComponent(TxtTelefonoRep)
                            .addComponent(DateRecepcionista, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                            .addComponent(TxtNombreRep, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                            .addGap(90, 90, 90)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(TxtCedulaRep, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                .addComponent(TxtApellidoRep)))))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel14))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboTipoSangreRep, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SpinerEdadRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboTituloRep, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(RadioBtnMasculino)
                        .addGap(18, 18, 18)
                        .addComponent(RadioBtnFemenino)
                        .addGap(18, 18, 18)
                        .addComponent(RadioBtnNoDefinido)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(TxtCedulaRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(SpinerEdadRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TxtApellidoRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(ComboTipoSangreRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtNombreRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10)
                    .addComponent(RadioBtnMasculino)
                    .addComponent(RadioBtnFemenino)
                    .addComponent(RadioBtnNoDefinido))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel14)
                        .addComponent(ComboTituloRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DateRecepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtTelefonoRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(TxtDireccionRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(TxtIdRecepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        TablaRecepcionistas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Cedula", "Apellido", "Nombre", "Fecha de nacimiento", "Telefono", "Direccion", "ID", "Edad", "Tipo Sangre", "Genero", "Titulo"
            }
        ));
        TablaRecepcionistas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaRecepcionistasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaRecepcionistas);

        BtnBuscarRep.setText("Buscar");
        BtnBuscarRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscarRepActionPerformed(evt);
            }
        });

        BtnGuardarRep.setText("Guardar");
        BtnGuardarRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGuardarRepActionPerformed(evt);
            }
        });

        BtnVRegistrosRecep.setText("Ver registros");
        BtnVRegistrosRecep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVRegistrosRecepActionPerformed(evt);
            }
        });

        BtnModificarRep.setText("Modificar");
        BtnModificarRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnModificarRepActionPerformed(evt);
            }
        });

        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        BtnEliminarPac.setText("Eliminar");
        BtnEliminarPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarPacActionPerformed(evt);
            }
        });

        jLabel16.setText("Buscar Usuario por cedula");

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Registro De Recepcionista");

        BtnSalirCrudDoc.setText("Salir");
        BtnSalirCrudDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalirCrudDocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(582, 582, 582)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnSalirCrudDoc)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(BtnSalirCrudDoc)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(TxtBuscarRep, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BtnBuscarRep)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BtnEliminarPac)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BtnModificarRep))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BtnGuardarRep)
                                    .addComponent(jButton1)
                                    .addComponent(BtnVRegistrosRecep))))
                        .addGap(0, 431, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(BtnGuardarRep)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(BtnVRegistrosRecep))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtBuscarRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnBuscarRep)
                    .addComponent(jLabel16)
                    .addComponent(BtnModificarRep)
                    .addComponent(BtnEliminarPac))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboTipoSangreRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboTipoSangreRepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboTipoSangreRepActionPerformed

    private void BtnGuardarRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGuardarRepActionPerformed

        if (!(TxtCedulaRep.getText().equals("") || TxtApellidoRep.getText().equals("") || TxtNombreRep.getText().equals("") || TxtTelefonoRep.getText().equals("") || TxtDireccionRep.getText().equals("") || TxtIdRecepcionista.getText().equals("") || ComboTipoSangreRep.getSelectedItem().equals("Seleccione") || GrupoGeneroRecep.isSelected(null) || ComboTituloRep.getSelectedItem().equals("Seleccione"))) {
            if (validar_datosRep() == true) {
                genero_recepcionista();
                mostrar_edadRecep();
                registrarRecepcionista();
                limpiar_datosRecepcionistas();
                vertablaRecepcionistas();
            } else {
                JOptionPane.showMessageDialog(null, "Por favor asegúrese de que los campos estén con los datos correctos.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Por favor asegúrese que este llenado todos los campos solicitados del recepcionista.");

        }
    }//GEN-LAST:event_BtnGuardarRepActionPerformed

    public boolean validar_datosRep() {
        boolean validorep = false;
        if (TxtCedulaRep.getText().matches("^\\d{10}$") && TxtApellidoRep.getText().matches("^[A-Z].{3,25}$") && TxtNombreRep.getText().matches("^[A-Z].{3,25}$") && TxtTelefonoRep.getText().matches("^\\d{8}$") && TxtDireccionRep.getText().matches("^[A-Za-z].{4,25}$") && TxtIdRecepcionista.getText().matches("^\\d{4}$")) {
            validorep = true;
        } else {
            validorep = false;
        }
        return validorep;
    }
    private void BtnVRegistrosRecepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVRegistrosRecepActionPerformed
        // TODO add your handling code here:
        vertablaRecepcionistas();
    }//GEN-LAST:event_BtnVRegistrosRecepActionPerformed

    private void BtnSalirCrudDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalirCrudDocActionPerformed
        // TODO add your handling code here:
        int n = JOptionPane.showConfirmDialog(this, "Estas seguro que deseas salir del crud de doctor.", "Confirma", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            Menu_Recepcionista mrr = new Menu_Recepcionista();
            mrr.setVisible(true);
            dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Sesión cancelada.");
        }
    }//GEN-LAST:event_BtnSalirCrudDocActionPerformed

    private void BtnEliminarPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarPacActionPerformed
        // TODO add your handling code here:
        int i = TablaRecepcionistas.getSelectedRow();
        if (i >= 0) {
            EliminarRecepcionista();
            limpiar_datosRecepcionistas();
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione el registro para eliminar.");
        }
    }//GEN-LAST:event_BtnEliminarPacActionPerformed

    private void TablaRecepcionistasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaRecepcionistasMouseClicked
        int i = TablaRecepcionistas.getSelectedRow();

        if (i >= 0) {
            String cedula = TablaRecepcionistas.getValueAt(i, 0).toString();
            String apellido = TablaRecepcionistas.getValueAt(i, 1).toString();
            String nombre = TablaRecepcionistas.getValueAt(i, 2).toString();
            String fnacimiento = TablaRecepcionistas.getValueAt(i, 3).toString();
            String telefono = TablaRecepcionistas.getValueAt(i, 4).toString();
            String direccion = TablaRecepcionistas.getValueAt(i, 5).toString();
            String id_r = TablaRecepcionistas.getValueAt(i, 6).toString();
            String edad = TablaRecepcionistas.getValueAt(i, 7).toString();
            String tipo_sangre = TablaRecepcionistas.getValueAt(i, 8).toString();
            String genero = TablaRecepcionistas.getValueAt(i, 9).toString();
            String titulo = TablaRecepcionistas.getValueAt(i, 10).toString();

            TxtCedulaRep.setText(cedula);
            TxtApellidoRep.setText(apellido);
            TxtNombreRep.setText(nombre);
            // DateDoctorFecha.setDate(fnacimientod);
            TxtTelefonoRep.setText(telefono);
            TxtDireccionRep.setText(direccion);
            TxtIdRecepcionista.setText(id_r);
            if(genero.equals("Masculino")){
                RadioBtnMasculino.setSelected(true);
            }
            if(genero.equals("Femenino")){
                RadioBtnFemenino.setSelected(true);
            }
            if(genero.equals("No definido")){
                RadioBtnNoDefinido.setSelected(true);
            }
            ComboTipoSangreRep.setSelectedItem(tipo_sangre);
            ComboTituloRep.setSelectedItem(titulo);

        } else {
            JOptionPane.showMessageDialog(null, "");
        }
    }//GEN-LAST:event_TablaRecepcionistasMouseClicked

    private void BtnModificarRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnModificarRepActionPerformed

        int i = TablaRecepcionistas.getSelectedRow();
        if (i >= 0) {
            if (validar_datosRep() == true) {
                mostrar_edadRecep();
                genero_recepcionista();
                ModificarRecepcionista();
            } else {
                JOptionPane.showMessageDialog(null, "Por favor asegúrese de que los campos estén con los datos correctos.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione el registro para modificar.");
        }
    }//GEN-LAST:event_BtnModificarRepActionPerformed

    private void BtnBuscarRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscarRepActionPerformed
        // TODO add your handling code here:
        if(!(TxtBuscarRep.getText().equals(""))){
            buscarRecepcionista();
        }else{
            JOptionPane.showMessageDialog(null, "Por favor debe ingresar la cedula en el campo, para realizar la consulta.", "Precaución  ", JOptionPane.WARNING_MESSAGE);
        }
        TxtBuscarRep.setText("");
    }//GEN-LAST:event_BtnBuscarRepActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       limpiar_datosRecepcionistas();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void buscarRecepcionista(){
        DefaultTableModel modelo = (DefaultTableModel) TablaRecepcionistas.getModel();
        modelo.setRowCount(0);
//        List<Recepcionista> listaRecepcionista = acrecep.ConsultaRecepcionista(TxtBuscarRep.getText());
//        for (Recepcionista dato : listaRecepcionista) {
//            Vector recepcio = new Vector();
//            recepcio.add(dato.getCedula());
//            recepcio.add(dato.getApellido());
//            recepcio.add(dato.getNombre());
//            recepcio.add(dato.getFecha_nacimiento());
//            recepcio.add(dato.getTelefono());
//            recepcio.add(dato.getDireccion());
//            recepcio.add(dato.getId());
//            recepcio.add(dato.getEdad());
//            recepcio.add(dato.getTipo_sangre());
//            recepcio.add(dato.getGenero());
//            recepcio.add(dato.getTitulo());
//            modelo.addRow(recepcio);
//            TablaRecepcionistas.setModel(modelo);
//        }
    }
    public void ModificarRecepcionista() {//aquiiiiiiiiiiiiiiiiiiiiiiiiii
        String cedula = TxtCedulaRep.getText();
        String apellido = TxtApellidoRep.getText();
        String nombre = TxtNombreRep.getText();
        SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
        String fnacimiento = formatoFecha.format(DateRecepcionista.getDate());
        String telefono = TxtTelefonoRep.getText();
        String direccion = TxtDireccionRep.getText();
        String id_r = TxtIdRecepcionista.getText();
        int edad = Integer.parseInt(edadrecep);
        String tipo_sangre = ComboTipoSangreRep.getSelectedItem().toString();
        String genero = generorecep;
        String titulo = ComboTituloRep.getSelectedItem().toString();

        //validamos los campos a enviar a la base de datos
        if (cedula.isEmpty() || apellido.isEmpty() || nombre.isEmpty() || fnacimiento.isEmpty() || telefono.isEmpty() || direccion.isEmpty() || id_r.isEmpty() || edad <= 0 || tipo_sangre.isEmpty() || genero.isEmpty() || titulo.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor valide los datos a enviar a la Base de Datos");
        } else {
            Recepcionista rep = new Recepcionista();
            rep.setCedula(cedula);
            rep.setApellido(apellido);
            rep.setNombre(nombre);
            rep.setFecha_nacimiento(fnacimiento);
            rep.setTelefono(telefono);
            rep.setDireccion(direccion);
            rep.setId(id_r);
            rep.setEdad(edad);
            rep.setTipo_sangre(tipo_sangre);
            rep.setGenero(genero);
            rep.setTitulo(titulo);
//            if (acrecep.ModificarRecepcionista(rep)) {
//                JOptionPane.showMessageDialog(null, "Modificasion con exito");
//                vertablaRecepcionistas();
//                limpiar_datosRecepcionistas();
//            }
        }

    }

    public void EliminarRecepcionista() {
        String cedula = TxtCedulaRep.getText();
        if (TxtCedulaRep.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor debe seleccionar un articulo de la lista");
        } else {
//            if (acrecep.EliminarRecepcionista(cedula)) {
//                JOptionPane.showMessageDialog(null, "Registro eliminado con exito...");
//                vertablaRecepcionistas();
//            }
        }
    }

    public void registrarRecepcionista() {
        String cedula = TxtCedulaRep.getText();
        String apellido = TxtApellidoRep.getText();
        String nombre = TxtNombreRep.getText();
        SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
        String fnacimiento = formatoFecha.format(DateRecepcionista.getDate());
        String telefono = TxtTelefonoRep.getText();
        String direccion = TxtDireccionRep.getText();
        String id_r = TxtIdRecepcionista.getText();
        int edad = Integer.parseInt(edadrecep);
        String tipo_sangre = ComboTipoSangreRep.getSelectedItem().toString();
        String genero = generorecep;
        String titulo = ComboTituloRep.getSelectedItem().toString();

        if (cedula.isEmpty() || apellido.isEmpty() || nombre.isEmpty() || fnacimiento.isEmpty() || telefono.isEmpty() || direccion.isEmpty() || id_r.isEmpty() || edad <= 0 || tipo_sangre.isEmpty() || genero.isEmpty() || titulo.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor valide los datos a enviar a la Base de Datos");
        } else {
            Recepcionista recepc = new Recepcionista();
            recepc.setCedula(cedula);
            recepc.setApellido(apellido);
            recepc.setNombre(nombre);
            recepc.setFecha_nacimiento(fnacimiento);
            recepc.setTelefono(telefono);
            recepc.setDireccion(direccion);
            recepc.setId(id_r);
            recepc.setEdad(edad);
            recepc.setTipo_sangre(tipo_sangre);
            recepc.setGenero(genero);
            recepc.setTitulo(titulo);
//            if (acrecep.InsertarRecepcionista(recepc)) {
//                JOptionPane.showMessageDialog(null, "Registro guardado con exito...");
//                //  vertablaDoctores();
//            }
        }
    }

    public void mostrar_edadRecep() {
        edadrecep = SpinerEdadRep.getValue().toString();
    }

    public void genero_recepcionista() {
        GrupoGeneroRecep.add(RadioBtnMasculino);
        GrupoGeneroRecep.add(RadioBtnFemenino);
        GrupoGeneroRecep.add(RadioBtnNoDefinido);
        if (RadioBtnMasculino.isSelected()) {
            generorecep = "Masculino";
        }
        if (RadioBtnFemenino.isSelected()) {
            generorecep = "Femenino";
        }
        if (RadioBtnNoDefinido.isSelected()) {
            generorecep = "No definido";
        }
    }

    public void vertablaRecepcionistas() {
        DefaultTableModel modelo = (DefaultTableModel) TablaRecepcionistas.getModel();
        modelo.setRowCount(0);
//        List<Recepcionista> listaRecepcionista = acrecep.listarDatos();
//        for (Recepcionista dato : listaRecepcionista) {
//            Vector recepcio = new Vector();
//
//            recepcio.add(dato.getCedula());
//            recepcio.add(dato.getApellido());
//            recepcio.add(dato.getNombre());
//            recepcio.add(dato.getFecha_nacimiento());
//            recepcio.add(dato.getTelefono());
//            recepcio.add(dato.getDireccion());
//            recepcio.add(dato.getId());
//            recepcio.add(dato.getEdad());
//            recepcio.add(dato.getTipo_sangre());
//            recepcio.add(dato.getGenero());
//            recepcio.add(dato.getTitulo());
//
//            modelo.addRow(recepcio);
//            TablaRecepcionistas.setModel(modelo);
//        }
    }

    public void limpiar_datosRecepcionistas() {
        TxtCedulaRep.setText("");
        TxtApellidoRep.setText("");
        TxtNombreRep.setText("");
        TxtTelefonoRep.setText("");
        TxtDireccionRep.setText("");
        TxtIdRecepcionista.setText("");
        ComboTipoSangreRep.setSelectedItem("Seleccione");
        ComboTituloRep.setSelectedItem("Seleccione");
        GrupoGeneroRecep.clearSelection();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Crud_Recepcionista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Crud_Recepcionista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Crud_Recepcionista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Crud_Recepcionista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Crud_Recepcionista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBuscarRep;
    private javax.swing.JButton BtnEliminarPac;
    private javax.swing.JButton BtnGuardarRep;
    private javax.swing.JButton BtnModificarRep;
    private javax.swing.JButton BtnSalirCrudDoc;
    private javax.swing.JButton BtnVRegistrosRecep;
    private javax.swing.JComboBox<String> ComboTipoSangreRep;
    private javax.swing.JComboBox<String> ComboTituloRep;
    private com.toedter.calendar.JDateChooser DateRecepcionista;
    private javax.swing.ButtonGroup GrupoGeneroRecep;
    private javax.swing.JRadioButton RadioBtnFemenino;
    private javax.swing.JRadioButton RadioBtnMasculino;
    private javax.swing.JRadioButton RadioBtnNoDefinido;
    private javax.swing.JSpinner SpinerEdadRep;
    private javax.swing.JTable TablaRecepcionistas;
    private javax.swing.JTextField TxtApellidoRep;
    private javax.swing.JTextField TxtBuscarRep;
    private javax.swing.JTextField TxtCedulaRep;
    private javax.swing.JTextField TxtDireccionRep;
    private javax.swing.JTextField TxtIdRecepcionista;
    private javax.swing.JTextField TxtNombreRep;
    private javax.swing.JTextField TxtTelefonoRep;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
