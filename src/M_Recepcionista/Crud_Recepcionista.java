/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package M_Recepcionista;

import Comportamientos.IngresoRecepcionistas;
import M_Recepcionista.Menu_Recepcionista;
import clases.Doctor;
import clases.Recepcionista;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class Crud_Recepcionista extends javax.swing.JFrame {

    /**
     * Creates new form Crud_Recepcionista
     */
    String edadrecep = "", titulorecep = "", generorecep = "";
//    String generorecep
    Recepcionista recep = new Recepcionista();
    IngresoRecepcionistas ingresoRep = new IngresoRecepcionistas();

    public Crud_Recepcionista() {
        initComponents();
        TablaRecepcionistasC();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoGeneroRecep = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        TxtNombreRep = new javax.swing.JTextField();
        TxtTelefonoRep = new javax.swing.JTextField();
        TxtDireccionRep = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TxtApellidoRep = new javax.swing.JTextField();
        TxtCedulaRep = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        ComboTipoSangreRep = new javax.swing.JComboBox<>();
        RadioBtnMasculino = new javax.swing.JRadioButton();
        RadioBtnFemenino = new javax.swing.JRadioButton();
        RadioBtnNoDefinido = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        DateRecepcionista = new com.toedter.calendar.JDateChooser();
        TxtSueldoRep = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaRecepcionistas = new javax.swing.JTable();
        TxtBuscarRep = new javax.swing.JTextField();
        BtnBuscarRep = new javax.swing.JButton();
        BtnGuardarRep = new javax.swing.JButton();
        BtnVRegistrosRecep = new javax.swing.JButton();
        BtnModificarRep = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        BtnEliminarPac = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        BtnSalirCrudDoc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de Recepcionista"));

        TxtNombreRep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtNombreRepKeyTyped(evt);
            }
        });

        TxtTelefonoRep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtTelefonoRepKeyTyped(evt);
            }
        });

        TxtDireccionRep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtDireccionRepKeyTyped(evt);
            }
        });

        jLabel1.setText("Cedula: ");

        jLabel2.setText("Apellido: ");

        jLabel4.setText("Nombre: ");

        jLabel5.setText("Fecha de nacimiento: ");

        jLabel6.setText("Telefono: ");

        jLabel7.setText("Direccion: ");

        TxtApellidoRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtApellidoRepActionPerformed(evt);
            }
        });
        TxtApellidoRep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtApellidoRepKeyTyped(evt);
            }
        });

        TxtCedulaRep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtCedulaRepKeyTyped(evt);
            }
        });

        jLabel8.setText("Tipo de sangre: ");

        ComboTipoSangreRep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "A+", "O+", "B+", "AB+", "A-", "O-", "B-", "AB-" }));
        ComboTipoSangreRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboTipoSangreRepActionPerformed(evt);
            }
        });

        GrupoGeneroRecep.add(RadioBtnMasculino);
        RadioBtnMasculino.setText("Masculino");

        GrupoGeneroRecep.add(RadioBtnFemenino);
        RadioBtnFemenino.setText("Femenino");

        GrupoGeneroRecep.add(RadioBtnNoDefinido);
        RadioBtnNoDefinido.setText("No definido");

        jLabel10.setText("Genero: ");

        TxtSueldoRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtSueldoRepActionPerformed(evt);
            }
        });
        TxtSueldoRep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtSueldoRepKeyTyped(evt);
            }
        });

        jLabel9.setText("Sueldo:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TxtDireccionRep)
                            .addComponent(TxtTelefonoRep)
                            .addComponent(DateRecepcionista, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                            .addComponent(TxtSueldoRep)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                            .addComponent(TxtNombreRep, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                            .addGap(90, 90, 90)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(TxtCedulaRep, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                .addComponent(TxtApellidoRep)))))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboTipoSangreRep, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(RadioBtnMasculino)
                        .addGap(18, 18, 18)
                        .addComponent(RadioBtnFemenino)
                        .addGap(18, 18, 18)
                        .addComponent(RadioBtnNoDefinido)))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TxtCedulaRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TxtApellidoRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(ComboTipoSangreRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtNombreRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10)
                    .addComponent(RadioBtnMasculino)
                    .addComponent(RadioBtnFemenino)
                    .addComponent(RadioBtnNoDefinido))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(DateRecepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtTelefonoRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(TxtDireccionRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtSueldoRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap())
        );

        TablaRecepcionistas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Cedula", "Apellido", "Nombre", "Fecha de nacimiento", "Genero", "Tipo de Sangre", "Telefono", "Direccion", "Id_recepcionista", "Sueldo"
            }
        ));
        TablaRecepcionistas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaRecepcionistasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaRecepcionistas);

        BtnBuscarRep.setText("Buscar");
        BtnBuscarRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscarRepActionPerformed(evt);
            }
        });

        BtnGuardarRep.setText("Guardar");
        BtnGuardarRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGuardarRepActionPerformed(evt);
            }
        });

        BtnVRegistrosRecep.setText("Ver registros");
        BtnVRegistrosRecep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVRegistrosRecepActionPerformed(evt);
            }
        });

        BtnModificarRep.setText("Modificar");
        BtnModificarRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnModificarRepActionPerformed(evt);
            }
        });

        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        BtnEliminarPac.setText("Eliminar");
        BtnEliminarPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarPacActionPerformed(evt);
            }
        });

        jLabel16.setText("Buscar Usuario por cedula");

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Registro De Recepcionista");

        BtnSalirCrudDoc.setText("Salir");
        BtnSalirCrudDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalirCrudDocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(582, 582, 582)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnSalirCrudDoc)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(BtnSalirCrudDoc)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(TxtBuscarRep, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BtnBuscarRep)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BtnEliminarPac)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BtnModificarRep))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BtnGuardarRep)
                                    .addComponent(jButton1)
                                    .addComponent(BtnVRegistrosRecep))))
                        .addGap(0, 431, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(BtnGuardarRep)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(BtnVRegistrosRecep))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtBuscarRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnBuscarRep)
                    .addComponent(jLabel16)
                    .addComponent(BtnModificarRep)
                    .addComponent(BtnEliminarPac))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void cedulaRep() {
        if (ingresoRep.valida_cedula(TxtCedulaRep.getText()) == true) {
            registraRecepcionista();
        } else {
            JOptionPane.showMessageDialog(null, "Error al guardarrrrrrrrrr.");
        }
    }

    private void TablaRecepcionistasC() {
        DefaultTableModel tblModelo = (DefaultTableModel) TablaRecepcionistas.getModel();

        tblModelo.setNumRows(0);
        List<Recepcionista> listaRecepcionist = ingresoRep.Tabla_recepcionistas();

        listaRecepcionist.stream().forEach(p -> {
            p.getSueldo();
            String su = String.valueOf(p.getSueldo());
            String[] persona = {p.getCedula(), p.getApellido(), p.getNombre(), p.getFecha_nacimiento(), p.getGenero(), p.getTipo_sangre(), p.getTelefono(), p.getDireccion(), p.getId_recepcionista(), su};
            tblModelo.addRow(persona);
        });
        // limpiarCampos();
    }

    private void ComboTipoSangreRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboTipoSangreRepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboTipoSangreRepActionPerformed

    private void BtnGuardarRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGuardarRepActionPerformed
        Date fecha_rep = DateRecepcionista.getDate();
        if (!(TxtCedulaRep.getText().matches("^\\d{10}$"))) {
            JOptionPane.showMessageDialog(null, "Ingresa la cedula.");
        } else {
            if (!(TxtApellidoRep.getText().matches("^[A-Z].{3,25}$"))) {
                JOptionPane.showMessageDialog(null, "Ingresa el apellido.");
            } else {
                if (!(TxtNombreRep.getText().matches("^[A-Z].{3,25}$"))) {
                    JOptionPane.showMessageDialog(null, "Ingresa el nombre.");
                } else {
                    if (fecha_rep == null) {
                        JOptionPane.showMessageDialog(null, "Verifique el ingreso de la fecha de nacimiento.");
                    } else {
                        if (!(TxtTelefonoRep.getText().matches("^\\d{8}$"))) {
                            JOptionPane.showMessageDialog(null, "Ingresa el telefono.");
                        } else {
                            if (TxtDireccionRep.getText().isEmpty()) {
                                JOptionPane.showMessageDialog(null, "Ingresa la direccion.");
                            } else {
                                if (ComboTipoSangreRep.getSelectedItem().toString().equals("Seleccione")) {
                                    JOptionPane.showMessageDialog(null, "Escoje tipo de sangre.");
                                } else {
                                    if (GrupoGeneroRecep.isSelected(null)) {
                                        JOptionPane.showMessageDialog(null, "Escoje genero");
                                    } else {
                                        if (TxtSueldoRep.getText().isEmpty()) {
                                            JOptionPane.showMessageDialog(null, "Ingrese su sueldo");
                                        } else {
                                            if (ingresoRep.valida_cedula(TxtCedulaRep.getText()) == true) {
                                                genero_recepcionista();
                                                registraRecepcionista();
                                                limpiar_datosRecepcionistas();
                                                TablaRecepcionistasC();

                                            } else {
                                                JOptionPane.showMessageDialog(null, "Error la cedula ya existe en los registros.");
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_BtnGuardarRepActionPerformed

    private void BtnVRegistrosRecepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVRegistrosRecepActionPerformed
        // TODO add your handling code here:
        TablaRecepcionistasC();
    }//GEN-LAST:event_BtnVRegistrosRecepActionPerformed

    private void BtnSalirCrudDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalirCrudDocActionPerformed
        // TODO add your handling code here:
        int n = JOptionPane.showConfirmDialog(this, "Estas seguro que deseas salir del crud de doctor.", "Confirma", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            Menu_Recepcionista mrr = new Menu_Recepcionista();
            mrr.setVisible(true);
            dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Sesión cancelada.");
        }
    }//GEN-LAST:event_BtnSalirCrudDocActionPerformed

    private void BtnEliminarPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarPacActionPerformed
        int i = TablaRecepcionistas.getSelectedRow();
        if (i >= 0) {

            int t = JOptionPane.showConfirmDialog(this, "Seguro que desea eliminar este registro?", "Verificación de eliminar.", JOptionPane.YES_NO_OPTION);
            if (t == JOptionPane.YES_OPTION) {
                EliminarRecepcionista();
                limpiar_datosRecepcionistas();
            }
            if (t == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(null, "Eliminacion cancelada.");

            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione el registro para eliminar.");
        }
    }//GEN-LAST:event_BtnEliminarPacActionPerformed

    public void EliminarRecepcionista() {
        String cedula = TxtCedulaRep.getText();
        if (TxtCedulaRep.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor debe seleccionar un articulo de la lista");
        } else {
            if (ingresoRep.eliminarRecepcionista(cedula)) {
                JOptionPane.showMessageDialog(null, "Registro eliminado con exito...");
                TablaRecepcionistasC();
            }
        }
    }

    private void TablaRecepcionistasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaRecepcionistasMouseClicked
        int i = TablaRecepcionistas.getSelectedRow();

        if (i >= 0) {
            String cedula = TablaRecepcionistas.getValueAt(i, 0).toString();
            String apellido = TablaRecepcionistas.getValueAt(i, 1).toString();
            String nombre = TablaRecepcionistas.getValueAt(i, 2).toString();
            // String fecha_nacimiento = TablaRecepcionistas.getValueAt(i, 3).toString();
            String genero = TablaRecepcionistas.getValueAt(i, 4).toString();
            String tipo_sangre = TablaRecepcionistas.getValueAt(i, 5).toString();
            String telefono = TablaRecepcionistas.getValueAt(i, 6).toString();
            String direccion = TablaRecepcionistas.getValueAt(i, 7).toString();
            String id_paciente = TablaRecepcionistas.getValueAt(i, 8).toString();
            String sueldo = TablaRecepcionistas.getValueAt(i, 9).toString();

            TxtCedulaRep.setText(cedula);
            TxtApellidoRep.setText(apellido);
            TxtNombreRep.setText(nombre);
            TxtTelefonoRep.setText(telefono);
            TxtDireccionRep.setText(direccion);

            String fecha = (String) TablaRecepcionistas.getValueAt(i, 3);
            Date fechas;
            try {
                fechas = new SimpleDateFormat("dd/MM/yyyy").parse(fecha);
                DateRecepcionista.setDate(fechas);
            } catch (ParseException ex) {
                Logger.getLogger(Crud_Paciente.class.getName()).log(Level.SEVERE, null, ex);
            }
            ComboTipoSangreRep.setSelectedItem(tipo_sangre);
            TxtSueldoRep.setText(sueldo);
            if (genero.equals("Masculino")) {
                RadioBtnMasculino.setSelected(true);
            }
            if (genero.equals("Femenino")) {
                RadioBtnFemenino.setSelected(true);
            }
            if (genero.equals("No definido")) {
                RadioBtnNoDefinido.setSelected(true);
            }
        } else {
            JOptionPane.showMessageDialog(null, "");
        }
    }//GEN-LAST:event_TablaRecepcionistasMouseClicked

    public void modificarDatosPac() {

        IngresoRecepcionistas inrep = new IngresoRecepcionistas();

        inrep.setCedula(TxtCedulaRep.getText());
        inrep.setApellido(TxtApellidoRep.getText());
        inrep.setNombre(TxtNombreRep.getText());
        inrep.setFecha_nacimiento(((JTextField) DateRecepcionista.getDateEditor().getUiComponent()).getText());
        inrep.setGenero(generorecep);
        inrep.setTipo_sangre(ComboTipoSangreRep.getSelectedItem().toString());
        inrep.setTelefono(TxtTelefonoRep.getText());
        inrep.setDireccion(TxtDireccionRep.getText());
        inrep.setSueldo(Float.parseFloat(TxtSueldoRep.getText()));

        if (inrep.ModificarRecepcionista(TxtCedulaRep.getText())) {
            System.out.println("Si se ingreso a tu corazon");
            JOptionPane.showMessageDialog(null, "Los datos se modificaron correctamente. ");
        } else {
            System.out.println("esta roto tu corazon");
        }

    }
    private void BtnModificarRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnModificarRepActionPerformed

        int i = TablaRecepcionistas.getSelectedRow();
        if (i >= 0) {
            Date fecha_rep = DateRecepcionista.getDate();
            if (!(TxtCedulaRep.getText().matches("^\\d{10}$"))) {
                JOptionPane.showMessageDialog(null, "Ingresa la cedula.");
            } else {
                if (!(TxtApellidoRep.getText().matches("^[A-Z].{3,25}$"))) {
                    JOptionPane.showMessageDialog(null, "Ingresa el apellido.");
                } else {
                    if (!(TxtNombreRep.getText().matches("^[A-Z].{3,25}$"))) {
                        JOptionPane.showMessageDialog(null, "Ingresa el nombre.");
                    } else {
                        if (fecha_rep == null) {
                            JOptionPane.showMessageDialog(null, "Verifique el ingreso de la fecha de nacimiento.");
                        } else {
                            if (!(TxtTelefonoRep.getText().matches("^\\d{8}$"))) {
                                JOptionPane.showMessageDialog(null, "Ingresa el telefono.");
                            } else {
                                if (TxtDireccionRep.getText().isEmpty()) {
                                    JOptionPane.showMessageDialog(null, "Ingresa la direccion.");
                                } else {
                                    if (ComboTipoSangreRep.getSelectedItem().toString().equals("Seleccione")) {
                                        JOptionPane.showMessageDialog(null, "Escoje tipo de sangre.");
                                    } else {
                                        if (GrupoGeneroRecep.isSelected(null)) {
                                            JOptionPane.showMessageDialog(null, "Escoje genero");
                                        } else {
                                            if (TxtSueldoRep.getText().isEmpty()) {
                                                JOptionPane.showMessageDialog(null, "Ingrese su sueldo");
                                            } else {
                                                genero_recepcionista();
                                                modificarDatosPac();
                                                TablaRecepcionistasC();
                                                limpiar_datosRecepcionistas();
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione el registro para modificar.");
        }
    }//GEN-LAST:event_BtnModificarRepActionPerformed

    public void Busqueda_recepcionista() {
        DefaultTableModel tblModelo = (DefaultTableModel) TablaRecepcionistas.getModel();

        tblModelo.setNumRows(0);
        List<Recepcionista> listarecepcionista = ingresoRep.consulta_Recepcionista(TxtCedulaRep.getText());

        listarecepcionista.stream().forEach(p -> {
            String[] persona = {p.getCedula(), p.getApellido(), p.getNombre(), p.getFecha_nacimiento(), p.getGenero(), p.getTipo_sangre(), p.getTelefono(), p.getDireccion(), p.getId_recepcionista()/*, p.getSueldo()*/};
            tblModelo.addRow(persona);
        });
    }
    private void BtnBuscarRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscarRepActionPerformed
        // TODO add your handling code here:
        if (!(TxtBuscarRep.getText().equals(""))) {
            Busqueda_recepcionista();
        } else {
            JOptionPane.showMessageDialog(null, "Por favor debe ingresar la cedula en el campo, para realizar la consulta.", "Precaución  ", JOptionPane.WARNING_MESSAGE);
        }
        TxtBuscarRep.setText("");
    }//GEN-LAST:event_BtnBuscarRepActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        limpiar_datosRecepcionistas();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TxtSueldoRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtSueldoRepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtSueldoRepActionPerformed
    //Cedula
    private void TxtCedulaRepKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtCedulaRepKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo numeros por favor.");
        }
    }//GEN-LAST:event_TxtCedulaRepKeyTyped
    //Apellido
    private void TxtApellidoRepKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtApellidoRepKeyTyped
        char vn = evt.getKeyChar();
        if (Character.isDigit(vn)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo letras");
        }

        if (Character.isLowerCase(vn)) {

            evt.setKeyChar(Character.toUpperCase(vn));
        }
    }//GEN-LAST:event_TxtApellidoRepKeyTyped

    private void TxtApellidoRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtApellidoRepActionPerformed

    }//GEN-LAST:event_TxtApellidoRepActionPerformed
    //Nombre
    private void TxtNombreRepKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtNombreRepKeyTyped
        // TODO add your handling code here:
        char vn = evt.getKeyChar();
        if (Character.isDigit(vn)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo letras");
        }

        if (Character.isLowerCase(vn)) {

            evt.setKeyChar(Character.toUpperCase(vn));
        }
    }//GEN-LAST:event_TxtNombreRepKeyTyped
    //Telefono
    private void TxtTelefonoRepKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtTelefonoRepKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo numeros por favor.");
        }
    }//GEN-LAST:event_TxtTelefonoRepKeyTyped
    //Direccion
    private void TxtDireccionRepKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtDireccionRepKeyTyped
        // TODO add your handling code here:
        char vn = evt.getKeyChar();
        if (Character.isDigit(vn)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo letras");
        }

        if (Character.isLowerCase(vn)) {

            evt.setKeyChar(Character.toUpperCase(vn));
        }
    }//GEN-LAST:event_TxtDireccionRepKeyTyped
    //Sueldo
    private void TxtSueldoRepKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtSueldoRepKeyTyped

        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo numeros por favor.");
        }
    }//GEN-LAST:event_TxtSueldoRepKeyTyped

    public void registraRecepcionista() {

        IngresoRecepcionistas ingreR = new IngresoRecepcionistas();
        ingreR.setCedula(TxtCedulaRep.getText());
        ingreR.setApellido(TxtApellidoRep.getText());
        ingreR.setNombre(TxtNombreRep.getText());
        ingreR.setFecha_nacimiento(((JTextField) DateRecepcionista.getDateEditor().getUiComponent()).getText());
        ingreR.setGenero(generorecep);
        ingreR.setTipo_sangre(ComboTipoSangreRep.getSelectedItem().toString());
        ingreR.setTelefono(TxtTelefonoRep.getText());
        ingreR.setDireccion(TxtDireccionRep.getText());
        ingreR.setSueldo(Float.parseFloat(TxtSueldoRep.getText()));
        if (ingreR.insertatRecepcionista()) {
            System.out.println("Si se ingreso a tu corazon");
        } else {
            System.out.println("esta roto tu corazon");
        }
    }

    public void genero_recepcionista() {
        GrupoGeneroRecep.add(RadioBtnMasculino);
        GrupoGeneroRecep.add(RadioBtnFemenino);
        GrupoGeneroRecep.add(RadioBtnNoDefinido);
        if (RadioBtnMasculino.isSelected()) {
            generorecep = "Masculino";
        }
        if (RadioBtnFemenino.isSelected()) {
            generorecep = "Femenino";
        }
        if (RadioBtnNoDefinido.isSelected()) {
            generorecep = "No definido";
        }
    }

    public void limpiar_datosRecepcionistas() {
        TxtCedulaRep.setText("");
        TxtApellidoRep.setText("");
        TxtNombreRep.setText("");
        TxtTelefonoRep.setText("");
        TxtDireccionRep.setText("");
        ComboTipoSangreRep.setSelectedItem("Seleccione");
        GrupoGeneroRecep.clearSelection();
        ((JTextField) DateRecepcionista.getDateEditor().getUiComponent()).setText(null);

        TxtSueldoRep.setText("");

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Crud_Recepcionista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Crud_Recepcionista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Crud_Recepcionista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Crud_Recepcionista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Crud_Recepcionista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBuscarRep;
    private javax.swing.JButton BtnEliminarPac;
    private javax.swing.JButton BtnGuardarRep;
    private javax.swing.JButton BtnModificarRep;
    private javax.swing.JButton BtnSalirCrudDoc;
    private javax.swing.JButton BtnVRegistrosRecep;
    private javax.swing.JComboBox<String> ComboTipoSangreRep;
    private com.toedter.calendar.JDateChooser DateRecepcionista;
    private javax.swing.ButtonGroup GrupoGeneroRecep;
    private javax.swing.JRadioButton RadioBtnFemenino;
    private javax.swing.JRadioButton RadioBtnMasculino;
    private javax.swing.JRadioButton RadioBtnNoDefinido;
    private javax.swing.JTable TablaRecepcionistas;
    private javax.swing.JTextField TxtApellidoRep;
    private javax.swing.JTextField TxtBuscarRep;
    private javax.swing.JTextField TxtCedulaRep;
    private javax.swing.JTextField TxtDireccionRep;
    private javax.swing.JTextField TxtNombreRep;
    private javax.swing.JTextField TxtSueldoRep;
    private javax.swing.JTextField TxtTelefonoRep;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
